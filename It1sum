import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class ExcelFileSearch {
    public static void main(String[] args) {
        // 指定要遍历的文件夹路径
        String folderPath = "C:/your-folder-path";
        File folder = new File(folderPath);

        // 调用方法遍历文件夹并处理文件
        traverseFolder(folder);
    }

    public static void traverseFolder(File folder) {
        // 获取文件夹中的所有文件和子文件夹
        File[] files = folder.listFiles();
        if (files != null) {
            for (File file : files) {
                // 如果是文件夹，则递归遍历子文件夹
                if (file.isDirectory()) {
                    traverseFolder(file);
                } else {
                    // 检查文件名是否包含 "ABC" 且以 .xlsx 结尾
                    if (file.getName().contains("ABC") && file.getName().endsWith(".xlsx")) {
                        System.out.println("文件名: " + file.getName());
                        // 处理 .xlsx 文件，输出 F2 单元格的值
                        printF2CellValue(file);
                    }
                }
            }
        }
    }

    public static void printF2CellValue(File file) {
        try (FileInputStream fis = new FileInputStream(file);
             Workbook workbook = new XSSFWorkbook(fis)) {
            // 获取第一个 sheet
            Sheet sheet = workbook.getSheetAt(0);
            // 获取 F2 单元格，F 是第6列（索引从 0 开始）
            Row row = sheet.getRow(1);  // F2 在第二行（索引从 0 开始）
            if (row != null) {
                Cell cell = row.getCell(5);  // F 列是第 6 列，索引为 5
                if (cell != null) {
                    // 输出 F2 单元格的值
                    System.out.println("F2 单元格的值: " + cell.toString());
                } else {
                    System.out.println("F2 单元格为空");
                }
            } else {
                System.out.println("第二行不存在");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
